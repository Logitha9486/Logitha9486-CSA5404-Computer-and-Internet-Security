class DiffieHellman { 
public static void main(String args[]) { 
int p = 23; /* publicly known (prime number) */ 
System.out.println("simulation of Diffie-Hellman key exchange algorithm\n-- 
"); 
System.out.println("Alice Sends : " + aliceSends); System.out.println("Bob 
Computes : " + bobComputes); System.out.println("Bob Sends : " + 
bobSends); System.out.println("Alice Computes : " + aliceComputes); 
int g = 5; /* publicly known (primitive root) */ int x = 4; 
/* only Alice knows this secret */ 
int y = 3; /* only Bob knows this secret */ double 
aliceSends = (Math.pow(g, x)) % p; 
double bobComputes = (Math.pow(aliceSends, y)) % p; double 
bobSends = (Math.pow(g, y)) % p; 
double aliceComputes = (Math.pow(bobSends, x)) % p; double 
sharedSecret = (Math.pow(g, (x * y))) % p; 
System.out.println("Shared Secret : " + sharedSecret); 
/* shared secrets should match and equality is transitive */ 
if ((aliceComputes == sharedSecret) && (aliceComputes == bobComputes)) 
System.out.println("Success: Shared Secrets Matches! " + sharedSecret); 
else 
System.out.println("Error: Shared Secrets does not Match"); 
} 
} 

//output
=== Diffie-Hellman Key Exchange ===
Public Prime (p): 23
Public Generator (g): 5
Alice's Private Key: 6
Bob's Private Key: 15
Alice's Public Key: 8
Bob's Public Key: 19
Alice's Shared Secret Key: 2
Bob's Shared Secret Key: 2
Key Exchange Successful! Shared Secret Key: 2
